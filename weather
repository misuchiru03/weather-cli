#!/bin/bash

for dep in curl; do
        if [ ! -x $(which $dep) ]; then
                echo "Missing $dep"
                exit
        fi
done

help() {
echo "Weather, version 1.0"
echo "Usage:  weather [location]"
echo ""
echo Weather location options:
echo "  City, State"
echo "  City, ST"
echo "  Zip/Postal Code"
echo "  IP address"
echo ""
echo "NOTES:"
echo "Though any IP address is usable and searchable, as far as postal codes,"
echo "currently only US Zip Codes and Canadian Postal Codes are recognized."
echo "In the future it may be possible to add other country postal codes."
}

get_weather() {
curl -s wttr.in/${LOCATION// /_} | head -n -2
}

get_ipinfo(){
IP="$(curl -s ipinfo.io/ip)"
}

get_ip_input(){
IP="$@"
}

get_zip() {
get_ipinfo
ZIP=$(curl -s ipinfo.io/$IP | awk -F ":" '/postal/ { print $2 }' | sed -e 's/^\ "//' -e 's/"$//')
}

get_ip_zip(){
get_ip_input
get_zip
}

get_city() {
CITY=$(curl -s ipinfo.io/$IP | awk -F ":" '/city/ { print $2 }' | sed -e 's/^\ "//' -e 's/",$//')
}

get_state() {
STATE=$(curl -s ipinfo.io/$IP | awk -F ":" '/region/ { print $2 }' | sed -e 's/^\ "//' -e 's/",$//')
}

get_location() {
LOCATION="$CITY, $STATE"
}


if [ "$1" == "-h" ]; then
        help
        exit
elif [ $# -eq 0 ]; then
        get_city
        get_state
        get_location
        echo "No city provided. Defaulting to $CITY, $STATE"
        get_weather
elif [[ "$1" =~ ^([0-9]){5}$ ]]; then
        curl -s wttr.in/$1 2>/dev/null | head -n -2
else
        # IP address input validation
        LOCATION=$@
        if [[ "$LOCATION" =~ ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$ ]]; then
                IP=$@
                curl -s ipinfo.io/$IP > /dev/null
                get_city
                get_state
                get_location
                echo "IP provided. Finding city, state based on IP address."
                get_weather
        elif
                # City name input validation
                [[ "$LOCATION" =~ ^([a-zA-Z].*)$ ]]; then
                        get_weather
        else
                # Non-standard input, something that this script does not understand
                echo "Sorry, I do not understand your input."
                echo "Please try either an [IP address], [city, state], [city, st], or a [city, country]."
                help
        fi
fi
